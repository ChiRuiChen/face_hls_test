// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config5_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_pp0_stage0 = 24'd16;
parameter    ap_ST_fsm_state7 = 24'd32;
parameter    ap_ST_fsm_state8 = 24'd64;
parameter    ap_ST_fsm_state9 = 24'd128;
parameter    ap_ST_fsm_state10 = 24'd256;
parameter    ap_ST_fsm_state11 = 24'd512;
parameter    ap_ST_fsm_state12 = 24'd1024;
parameter    ap_ST_fsm_state13 = 24'd2048;
parameter    ap_ST_fsm_state14 = 24'd4096;
parameter    ap_ST_fsm_state15 = 24'd8192;
parameter    ap_ST_fsm_state16 = 24'd16384;
parameter    ap_ST_fsm_state17 = 24'd32768;
parameter    ap_ST_fsm_state18 = 24'd65536;
parameter    ap_ST_fsm_state19 = 24'd131072;
parameter    ap_ST_fsm_state20 = 24'd262144;
parameter    ap_ST_fsm_state21 = 24'd524288;
parameter    ap_ST_fsm_state22 = 24'd1048576;
parameter    ap_ST_fsm_state23 = 24'd2097152;
parameter    ap_ST_fsm_state24 = 24'd4194304;
parameter    ap_ST_fsm_state25 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [15:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [8:0] layer_in_V_4_address0;
reg    layer_in_V_4_ce0;
reg    layer_in_V_4_we0;
wire  signed [15:0] layer_in_V_4_q0;
reg   [31:0] sX_1;
reg   [31:0] sY_1;
reg   [31:0] pY_1;
reg   [31:0] pX_1;
wire   [8:0] w5_V_address0;
reg    w5_V_ce0;
wire   [508:0] w5_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln315_fu_1167_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state24;
reg   [31:0] acc_V_31_0_reg_729;
reg   [31:0] acc_V_30_0_reg_741;
reg   [31:0] acc_V_29_0_reg_753;
reg   [31:0] acc_V_28_0_reg_765;
reg   [31:0] acc_V_27_0_reg_777;
reg   [31:0] acc_V_26_0_reg_789;
reg   [31:0] acc_V_25_0_reg_801;
reg   [31:0] acc_V_24_0_reg_813;
reg   [31:0] acc_V_23_0_reg_825;
reg   [31:0] acc_V_22_0_reg_837;
reg   [31:0] acc_V_21_0_reg_849;
reg   [31:0] acc_V_20_0_reg_861;
reg   [31:0] acc_V_19_0_reg_873;
reg   [31:0] acc_V_18_0_reg_885;
reg   [31:0] acc_V_17_0_reg_897;
reg   [31:0] acc_V_16_0_reg_909;
reg   [31:0] acc_V_15_0_reg_921;
reg   [31:0] acc_V_14_0_reg_933;
reg   [31:0] acc_V_13_0_reg_945;
reg   [31:0] acc_V_12_0_reg_957;
reg   [31:0] acc_V_11_0_reg_969;
reg   [31:0] acc_V_10_0_reg_981;
reg   [31:0] acc_V_9_0_reg_993;
reg   [31:0] acc_V_8_0_reg_1005;
reg   [31:0] acc_V_7_0_reg_1017;
reg   [31:0] acc_V_6_0_reg_1029;
reg   [31:0] acc_V_5_0_reg_1041;
reg   [31:0] acc_V_4_0_reg_1053;
reg   [31:0] acc_V_3_0_reg_1065;
reg   [31:0] acc_V_2_0_reg_1077;
reg   [31:0] acc_V_1_0_reg_1089;
reg   [31:0] acc_V_0_0_reg_1101;
reg   [8:0] in_index_reg_1113;
reg    ap_block_state1;
wire   [10:0] i_fu_1161_p2;
reg   [10:0] i_reg_2574;
wire    ap_CS_fsm_state2;
wire   [5:0] i1_fu_1173_p2;
reg    ap_block_state3;
reg   [31:0] sX_1_load_reg_2587;
wire    ap_CS_fsm_state4;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_ready;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done;
wire   [0:0] icmp_ln326_fu_1188_p2;
reg   [0:0] icmp_ln326_reg_2592;
reg   [31:0] sY_1_load_reg_2597;
wire   [0:0] icmp_ln326_4_fu_1198_p2;
reg   [0:0] icmp_ln326_4_reg_2602;
reg   [31:0] pY_1_load_reg_2607;
reg   [31:0] pX_1_load_reg_2613;
wire   [0:0] and_ln326_4_fu_1256_p2;
reg   [0:0] and_ln326_4_reg_2619;
wire   [0:0] icmp_ln324_fu_1262_p2;
reg   [0:0] icmp_ln324_reg_2623;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] ir_fu_1268_p2;
reg    ap_enable_reg_pp0_iter0;
wire  signed [31:0] grp_fu_2155_p3;
reg    ap_enable_reg_pp0_iter1;
wire  signed [31:0] grp_fu_2163_p3;
wire  signed [31:0] grp_fu_2171_p3;
wire  signed [31:0] grp_fu_2179_p3;
wire  signed [31:0] grp_fu_2187_p3;
wire  signed [31:0] grp_fu_2195_p3;
wire  signed [31:0] grp_fu_2203_p3;
wire  signed [31:0] grp_fu_2211_p3;
wire  signed [31:0] grp_fu_2219_p3;
wire  signed [31:0] grp_fu_2227_p3;
wire  signed [31:0] grp_fu_2235_p3;
wire  signed [31:0] grp_fu_2243_p3;
wire  signed [31:0] grp_fu_2251_p3;
wire  signed [31:0] grp_fu_2259_p3;
wire  signed [31:0] grp_fu_2267_p3;
wire  signed [31:0] grp_fu_2275_p3;
wire  signed [31:0] grp_fu_2283_p3;
wire  signed [31:0] grp_fu_2291_p3;
wire  signed [31:0] grp_fu_2299_p3;
wire  signed [31:0] grp_fu_2307_p3;
wire  signed [31:0] grp_fu_2315_p3;
wire  signed [31:0] grp_fu_2323_p3;
wire  signed [31:0] grp_fu_2331_p3;
wire  signed [31:0] grp_fu_2339_p3;
wire  signed [31:0] grp_fu_2347_p3;
wire  signed [31:0] grp_fu_2355_p3;
wire  signed [31:0] grp_fu_2363_p3;
wire  signed [31:0] grp_fu_2371_p3;
wire  signed [31:0] grp_fu_2379_p3;
wire  signed [31:0] grp_fu_2387_p3;
wire  signed [31:0] grp_fu_2395_p3;
wire  signed [31:0] grp_fu_2403_p3;
reg   [15:0] trunc_ln708_63_reg_2802;
wire    ap_CS_fsm_state7;
reg   [15:0] trunc_ln708_64_reg_2807;
reg   [15:0] trunc_ln708_65_reg_2812;
reg   [15:0] trunc_ln708_66_reg_2817;
reg   [15:0] trunc_ln708_67_reg_2822;
reg   [15:0] trunc_ln708_68_reg_2827;
reg   [15:0] trunc_ln708_69_reg_2832;
reg   [15:0] trunc_ln708_70_reg_2837;
reg   [15:0] trunc_ln708_71_reg_2842;
reg   [15:0] trunc_ln708_72_reg_2847;
reg   [15:0] trunc_ln708_73_reg_2852;
reg   [15:0] trunc_ln708_74_reg_2857;
reg   [15:0] trunc_ln708_75_reg_2862;
reg   [15:0] trunc_ln708_76_reg_2867;
reg   [15:0] trunc_ln708_77_reg_2872;
reg   [15:0] trunc_ln708_78_reg_2877;
reg   [15:0] trunc_ln708_79_reg_2882;
reg   [15:0] trunc_ln708_80_reg_2887;
reg   [15:0] trunc_ln708_81_reg_2892;
reg   [15:0] trunc_ln708_82_reg_2897;
reg   [15:0] trunc_ln708_83_reg_2902;
reg   [15:0] trunc_ln708_84_reg_2907;
reg   [15:0] trunc_ln708_85_reg_2912;
reg   [15:0] trunc_ln708_86_reg_2917;
reg   [15:0] trunc_ln708_87_reg_2922;
reg   [15:0] trunc_ln708_88_reg_2927;
reg   [15:0] trunc_ln708_89_reg_2932;
reg   [15:0] trunc_ln708_90_reg_2937;
reg   [15:0] trunc_ln708_91_reg_2942;
reg   [15:0] trunc_ln708_92_reg_2947;
wire   [5:0] i_ic_fu_2058_p2;
reg   [5:0] i_ic_reg_2955;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln338_fu_2052_p2;
wire   [0:0] icmp_ln346_fu_2069_p2;
reg   [0:0] icmp_ln346_reg_2965;
wire   [31:0] select_ln356_fu_2136_p3;
wire   [0:0] icmp_ln350_fu_2115_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [4:0] tmpdata_V_address0;
reg    tmpdata_V_ce0;
reg    tmpdata_V_we0;
wire   [15:0] tmpdata_V_q0;
reg   [4:0] layer_out_i_address0;
reg    layer_out_i_ce0;
reg    layer_out_i_we0;
reg   [15:0] layer_out_i_d0;
wire   [15:0] layer_out_i_q0;
reg   [4:0] layer_out_i_address1;
reg    layer_out_i_ce1;
reg    layer_out_i_we1;
reg   [15:0] layer_out_i_d1;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_start;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_idle;
wire   [4:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_data_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_data_V_ce0;
wire   [8:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_ce0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_we0;
wire   [15:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_d0;
reg   [10:0] i_0_i_reg_707;
wire    ap_CS_fsm_state25;
reg   [5:0] i1_0_i_reg_718;
wire   [0:0] icmp_ln313_fu_1155_p2;
wire    ap_block_pp0_stage0;
reg   [5:0] i_ic_0_i_reg_1124;
wire    ap_CS_fsm_state22;
reg   [31:0] storemerge_i_reg_1135;
reg    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_start_reg;
reg    ap_block_state3_ignore_call0;
wire   [63:0] zext_ln317_fu_1179_p1;
wire   [63:0] zext_ln332_fu_1274_p1;
wire   [63:0] zext_ln340_fu_2064_p1;
wire   [31:0] select_ln361_fu_2090_p3;
wire   [31:0] add_ln354_fu_2120_p2;
wire   [31:0] add_ln359_fu_2074_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [30:0] tmp_4_fu_1208_p4;
wire   [30:0] tmp_5_fu_1228_p4;
wire   [0:0] icmp_ln326_5_fu_1218_p2;
wire   [0:0] icmp_ln326_6_fu_1238_p2;
wire   [0:0] and_ln326_3_fu_1250_p2;
wire   [0:0] and_ln326_fu_1244_p2;
wire  signed [15:0] sext_ln1116_fu_1284_p0;
wire  signed [15:0] trunc_ln332_fu_1280_p1;
wire  signed [15:0] tmp_96_fu_1296_p4;
wire  signed [15:0] tmp_97_fu_1310_p4;
wire  signed [15:0] tmp_98_fu_1324_p4;
wire  signed [15:0] tmp_99_fu_1338_p4;
wire  signed [15:0] tmp_100_fu_1352_p4;
wire  signed [15:0] tmp_101_fu_1366_p4;
wire  signed [15:0] tmp_102_fu_1380_p4;
wire  signed [15:0] tmp_103_fu_1394_p4;
wire  signed [15:0] tmp_104_fu_1408_p4;
wire  signed [15:0] tmp_105_fu_1422_p4;
wire  signed [15:0] tmp_106_fu_1436_p4;
wire  signed [15:0] tmp_107_fu_1450_p4;
wire  signed [15:0] tmp_108_fu_1464_p4;
wire  signed [15:0] tmp_109_fu_1478_p4;
wire  signed [15:0] tmp_110_fu_1492_p4;
wire  signed [15:0] tmp_111_fu_1506_p4;
wire  signed [15:0] tmp_112_fu_1520_p4;
wire  signed [15:0] tmp_113_fu_1534_p4;
wire  signed [15:0] tmp_114_fu_1548_p4;
wire  signed [15:0] tmp_115_fu_1562_p4;
wire  signed [15:0] tmp_116_fu_1576_p4;
wire  signed [15:0] tmp_117_fu_1590_p4;
wire  signed [15:0] tmp_118_fu_1604_p4;
wire  signed [15:0] tmp_119_fu_1618_p4;
wire  signed [15:0] tmp_120_fu_1632_p4;
wire  signed [15:0] tmp_121_fu_1646_p4;
wire  signed [15:0] tmp_122_fu_1660_p4;
wire  signed [15:0] tmp_123_fu_1674_p4;
wire  signed [15:0] tmp_124_fu_1688_p4;
wire  signed [15:0] tmp_125_fu_1702_p4;
wire  signed [12:0] tmp_2_fu_1716_p4;
wire   [31:0] add_ln361_fu_2085_p2;
wire   [31:0] add_ln356_fu_2131_p2;
wire  signed [15:0] grp_fu_2155_p1;
wire  signed [31:0] sext_ln1116_fu_1284_p1;
wire  signed [15:0] grp_fu_2163_p1;
wire  signed [15:0] grp_fu_2171_p1;
wire  signed [15:0] grp_fu_2179_p1;
wire  signed [15:0] grp_fu_2187_p1;
wire  signed [15:0] grp_fu_2195_p1;
wire  signed [15:0] grp_fu_2203_p1;
wire  signed [15:0] grp_fu_2211_p1;
wire  signed [15:0] grp_fu_2219_p1;
wire  signed [15:0] grp_fu_2227_p1;
wire  signed [15:0] grp_fu_2235_p1;
wire  signed [15:0] grp_fu_2243_p1;
wire  signed [15:0] grp_fu_2251_p1;
wire  signed [15:0] grp_fu_2259_p1;
wire  signed [15:0] grp_fu_2267_p1;
wire  signed [15:0] grp_fu_2275_p1;
wire  signed [15:0] grp_fu_2283_p1;
wire  signed [15:0] grp_fu_2291_p1;
wire  signed [15:0] grp_fu_2299_p1;
wire  signed [15:0] grp_fu_2307_p1;
wire  signed [15:0] grp_fu_2315_p1;
wire  signed [15:0] grp_fu_2323_p1;
wire  signed [15:0] grp_fu_2331_p1;
wire  signed [15:0] grp_fu_2339_p1;
wire  signed [15:0] grp_fu_2347_p1;
wire  signed [15:0] grp_fu_2355_p1;
wire  signed [15:0] grp_fu_2363_p1;
wire  signed [15:0] grp_fu_2371_p1;
wire  signed [15:0] grp_fu_2379_p1;
wire  signed [15:0] grp_fu_2387_p1;
wire  signed [15:0] grp_fu_2395_p1;
reg   [23:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_684;
reg    ap_condition_686;
reg    ap_condition_470;
reg    ap_condition_622;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 24'd1;
#0 sX_1 = 32'd0;
#0 sY_1 = 32'd0;
#0 pY_1 = 32'd0;
#0 pX_1 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_start_reg = 1'b0;
end

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_layeibs #(
    .DataWidth( 16 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
layer_in_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_in_V_4_address0),
    .ce0(layer_in_V_4_ce0),
    .we0(layer_in_V_4_we0),
    .d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_d0),
    .q0(layer_in_V_4_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_w5_V #(
    .DataWidth( 509 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
w5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w5_V_address0),
    .ce0(w5_V_ce0),
    .q0(w5_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_tmpdjbC #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
tmpdata_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpdata_V_address0),
    .ce0(tmpdata_V_ce0),
    .we0(tmpdata_V_we0),
    .d0(data_V_V_dout),
    .q0(tmpdata_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_layefYi #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
layer_out_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_out_i_address0),
    .ce0(layer_out_i_ce0),
    .we0(layer_out_i_we0),
    .d0(layer_out_i_d0),
    .q0(layer_out_i_q0),
    .address1(layer_out_i_address1),
    .ce1(layer_out_i_ce1),
    .we1(layer_out_i_we1),
    .d1(layer_out_i_d1)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_start),
    .ap_done(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done),
    .ap_idle(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_idle),
    .ap_ready(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_ready),
    .data_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_data_V_address0),
    .data_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_data_V_ce0),
    .data_V_q0(tmpdata_V_q0),
    .output_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_address0),
    .output_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_ce0),
    .output_V_we0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_we0),
    .output_V_d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_d0),
    .output_V_q0(layer_in_V_4_q0)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U56(
    .din0(trunc_ln332_fu_1280_p1),
    .din1(grp_fu_2155_p1),
    .din2(acc_V_0_0_reg_1101),
    .dout(grp_fu_2155_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U57(
    .din0(tmp_96_fu_1296_p4),
    .din1(grp_fu_2163_p1),
    .din2(acc_V_1_0_reg_1089),
    .dout(grp_fu_2163_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U58(
    .din0(tmp_97_fu_1310_p4),
    .din1(grp_fu_2171_p1),
    .din2(acc_V_2_0_reg_1077),
    .dout(grp_fu_2171_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U59(
    .din0(tmp_98_fu_1324_p4),
    .din1(grp_fu_2179_p1),
    .din2(acc_V_3_0_reg_1065),
    .dout(grp_fu_2179_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U60(
    .din0(tmp_99_fu_1338_p4),
    .din1(grp_fu_2187_p1),
    .din2(acc_V_4_0_reg_1053),
    .dout(grp_fu_2187_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U61(
    .din0(tmp_100_fu_1352_p4),
    .din1(grp_fu_2195_p1),
    .din2(acc_V_5_0_reg_1041),
    .dout(grp_fu_2195_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U62(
    .din0(tmp_101_fu_1366_p4),
    .din1(grp_fu_2203_p1),
    .din2(acc_V_6_0_reg_1029),
    .dout(grp_fu_2203_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U63(
    .din0(tmp_102_fu_1380_p4),
    .din1(grp_fu_2211_p1),
    .din2(acc_V_7_0_reg_1017),
    .dout(grp_fu_2211_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U64(
    .din0(tmp_103_fu_1394_p4),
    .din1(grp_fu_2219_p1),
    .din2(acc_V_8_0_reg_1005),
    .dout(grp_fu_2219_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U65(
    .din0(tmp_104_fu_1408_p4),
    .din1(grp_fu_2227_p1),
    .din2(acc_V_9_0_reg_993),
    .dout(grp_fu_2227_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U66(
    .din0(tmp_105_fu_1422_p4),
    .din1(grp_fu_2235_p1),
    .din2(acc_V_10_0_reg_981),
    .dout(grp_fu_2235_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U67(
    .din0(tmp_106_fu_1436_p4),
    .din1(grp_fu_2243_p1),
    .din2(acc_V_11_0_reg_969),
    .dout(grp_fu_2243_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U68(
    .din0(tmp_107_fu_1450_p4),
    .din1(grp_fu_2251_p1),
    .din2(acc_V_12_0_reg_957),
    .dout(grp_fu_2251_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U69(
    .din0(tmp_108_fu_1464_p4),
    .din1(grp_fu_2259_p1),
    .din2(acc_V_13_0_reg_945),
    .dout(grp_fu_2259_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U70(
    .din0(tmp_109_fu_1478_p4),
    .din1(grp_fu_2267_p1),
    .din2(acc_V_14_0_reg_933),
    .dout(grp_fu_2267_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U71(
    .din0(tmp_110_fu_1492_p4),
    .din1(grp_fu_2275_p1),
    .din2(acc_V_15_0_reg_921),
    .dout(grp_fu_2275_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U72(
    .din0(tmp_111_fu_1506_p4),
    .din1(grp_fu_2283_p1),
    .din2(acc_V_16_0_reg_909),
    .dout(grp_fu_2283_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U73(
    .din0(tmp_112_fu_1520_p4),
    .din1(grp_fu_2291_p1),
    .din2(acc_V_17_0_reg_897),
    .dout(grp_fu_2291_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U74(
    .din0(tmp_113_fu_1534_p4),
    .din1(grp_fu_2299_p1),
    .din2(acc_V_18_0_reg_885),
    .dout(grp_fu_2299_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U75(
    .din0(tmp_114_fu_1548_p4),
    .din1(grp_fu_2307_p1),
    .din2(acc_V_19_0_reg_873),
    .dout(grp_fu_2307_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U76(
    .din0(tmp_115_fu_1562_p4),
    .din1(grp_fu_2315_p1),
    .din2(acc_V_20_0_reg_861),
    .dout(grp_fu_2315_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U77(
    .din0(tmp_116_fu_1576_p4),
    .din1(grp_fu_2323_p1),
    .din2(acc_V_21_0_reg_849),
    .dout(grp_fu_2323_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U78(
    .din0(tmp_117_fu_1590_p4),
    .din1(grp_fu_2331_p1),
    .din2(acc_V_22_0_reg_837),
    .dout(grp_fu_2331_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U79(
    .din0(tmp_118_fu_1604_p4),
    .din1(grp_fu_2339_p1),
    .din2(acc_V_23_0_reg_825),
    .dout(grp_fu_2339_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U80(
    .din0(tmp_119_fu_1618_p4),
    .din1(grp_fu_2347_p1),
    .din2(acc_V_24_0_reg_813),
    .dout(grp_fu_2347_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U81(
    .din0(tmp_120_fu_1632_p4),
    .din1(grp_fu_2355_p1),
    .din2(acc_V_25_0_reg_801),
    .dout(grp_fu_2355_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U82(
    .din0(tmp_121_fu_1646_p4),
    .din1(grp_fu_2363_p1),
    .din2(acc_V_26_0_reg_789),
    .dout(grp_fu_2363_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U83(
    .din0(tmp_122_fu_1660_p4),
    .din1(grp_fu_2371_p1),
    .din2(acc_V_27_0_reg_777),
    .dout(grp_fu_2371_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U84(
    .din0(tmp_123_fu_1674_p4),
    .din1(grp_fu_2379_p1),
    .din2(acc_V_28_0_reg_765),
    .dout(grp_fu_2379_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U85(
    .din0(tmp_124_fu_1688_p4),
    .din1(grp_fu_2387_p1),
    .din2(acc_V_29_0_reg_753),
    .dout(grp_fu_2387_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U86(
    .din0(tmp_125_fu_1702_p4),
    .din1(grp_fu_2395_p1),
    .din2(acc_V_30_0_reg_741),
    .dout(grp_fu_2395_p3)
);

myproject_mac_muladd_13s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_13s_16s_32ns_32_1_1_U87(
    .din0(tmp_2_fu_1716_p4),
    .din1(layer_in_V_4_q0),
    .din2(acc_V_31_0_reg_729),
    .dout(grp_fu_2403_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln313_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln315_fu_1167_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1167_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_start_reg <= 1'b1;
        end else if ((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_ready == 1'b1)) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_0_0_reg_1101 <= grp_fu_2155_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_0_0_reg_1101 <= 32'd4294057984;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_10_0_reg_981 <= grp_fu_2235_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_10_0_reg_981 <= 32'd2715648;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_11_0_reg_969 <= grp_fu_2243_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_11_0_reg_969 <= 32'd86016;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_12_0_reg_957 <= grp_fu_2251_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_12_0_reg_957 <= 32'd4293746688;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_13_0_reg_945 <= grp_fu_2259_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_13_0_reg_945 <= 32'd147456;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_14_0_reg_933 <= grp_fu_2267_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_14_0_reg_933 <= 32'd4294586368;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_15_0_reg_921 <= grp_fu_2275_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_15_0_reg_921 <= 32'd4294451200;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_16_0_reg_909 <= grp_fu_2283_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_16_0_reg_909 <= 32'd798720;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_17_0_reg_897 <= grp_fu_2291_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_17_0_reg_897 <= 32'd4294672384;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_18_0_reg_885 <= grp_fu_2299_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_18_0_reg_885 <= 32'd2691072;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_19_0_reg_873 <= grp_fu_2307_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_19_0_reg_873 <= 32'd4294692864;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_1_0_reg_1089 <= grp_fu_2163_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_1_0_reg_1089 <= 32'd4293890048;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_20_0_reg_861 <= grp_fu_2315_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_20_0_reg_861 <= 32'd643072;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_21_0_reg_849 <= grp_fu_2323_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_21_0_reg_849 <= 32'd4290842624;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_22_0_reg_837 <= grp_fu_2331_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_22_0_reg_837 <= 32'd4294627328;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_23_0_reg_825 <= grp_fu_2339_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_23_0_reg_825 <= 32'd4294365184;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_24_0_reg_813 <= grp_fu_2347_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_24_0_reg_813 <= 32'd2674688;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_25_0_reg_801 <= grp_fu_2355_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_25_0_reg_801 <= 32'd4293844992;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_26_0_reg_789 <= grp_fu_2363_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_26_0_reg_789 <= 32'd4293951488;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_27_0_reg_777 <= grp_fu_2371_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_27_0_reg_777 <= 32'd737280;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_28_0_reg_765 <= grp_fu_2379_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_28_0_reg_765 <= 32'd122880;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_29_0_reg_753 <= grp_fu_2387_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_29_0_reg_753 <= 32'd380928;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_2_0_reg_1077 <= grp_fu_2171_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_2_0_reg_1077 <= 32'd4294152192;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_30_0_reg_741 <= grp_fu_2395_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_30_0_reg_741 <= 32'd225280;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_31_0_reg_729 <= grp_fu_2403_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_31_0_reg_729 <= 32'd307200;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_3_0_reg_1065 <= grp_fu_2179_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_3_0_reg_1065 <= 32'd4294336512;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_4_0_reg_1053 <= grp_fu_2187_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_4_0_reg_1053 <= 32'd4293251072;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_5_0_reg_1041 <= grp_fu_2195_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_5_0_reg_1041 <= 32'd221184;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_6_0_reg_1029 <= grp_fu_2203_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_6_0_reg_1029 <= 32'd700416;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_7_0_reg_1017 <= grp_fu_2211_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_7_0_reg_1017 <= 32'd1146880;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_8_0_reg_1005 <= grp_fu_2219_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_8_0_reg_1005 <= 32'd4294225920;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2623 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_9_0_reg_993 <= grp_fu_2227_p3;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_9_0_reg_993 <= 32'd4294590464;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln315_fu_1167_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_i_reg_718 <= i1_fu_1173_p2;
    end else if (((icmp_ln313_fu_1155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_0_i_reg_718 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_0_i_reg_707 <= i_reg_2574;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_707 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        i_ic_0_i_reg_1124 <= i_ic_reg_2955;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_ic_0_i_reg_1124 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_1262_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_1113 <= ir_fu_1268_p2;
    end else if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        in_index_reg_1113 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_686)) begin
            pX_1 <= 32'd0;
        end else if ((1'b1 == ap_condition_684)) begin
            pX_1 <= add_ln359_fu_2074_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_622)) begin
            pY_1 <= 32'd0;
        end else if ((1'b1 == ap_condition_470)) begin
            pY_1 <= add_ln354_fu_2120_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_686)) begin
            sX_1 <= 32'd0;
        end else if ((1'b1 == ap_condition_684)) begin
            sX_1 <= select_ln361_fu_2090_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_622)) begin
            storemerge_i_reg_1135 <= 32'd0;
        end else if ((1'b1 == ap_condition_470)) begin
            storemerge_i_reg_1135 <= select_ln356_fu_2136_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln326_4_reg_2619 <= and_ln326_4_fu_1256_p2;
        icmp_ln326_4_reg_2602 <= icmp_ln326_4_fu_1198_p2;
        icmp_ln326_reg_2592 <= icmp_ln326_fu_1188_p2;
        pX_1_load_reg_2613 <= pX_1;
        pY_1_load_reg_2607 <= pY_1;
        sX_1_load_reg_2587 <= sX_1;
        sY_1_load_reg_2597 <= sY_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln326_4_reg_2619) & (1'b1 == ap_CS_fsm_state23))) begin
        i_ic_reg_2955 <= i_ic_fu_2058_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2574 <= i_fu_1161_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln324_reg_2623 <= icmp_ln324_fu_1262_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & ((1'd0 == and_ln326_4_reg_2619) | (icmp_ln338_fu_2052_p2 == 1'd1)))) begin
        icmp_ln346_reg_2965 <= icmp_ln346_fu_2069_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln346_reg_2965 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        sY_1 <= storemerge_i_reg_1135;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln708_63_reg_2802 <= {{acc_V_2_0_reg_1077[27:12]}};
        trunc_ln708_64_reg_2807 <= {{acc_V_3_0_reg_1065[27:12]}};
        trunc_ln708_65_reg_2812 <= {{acc_V_4_0_reg_1053[27:12]}};
        trunc_ln708_66_reg_2817 <= {{acc_V_5_0_reg_1041[27:12]}};
        trunc_ln708_67_reg_2822 <= {{acc_V_6_0_reg_1029[27:12]}};
        trunc_ln708_68_reg_2827 <= {{acc_V_7_0_reg_1017[27:12]}};
        trunc_ln708_69_reg_2832 <= {{acc_V_8_0_reg_1005[27:12]}};
        trunc_ln708_70_reg_2837 <= {{acc_V_9_0_reg_993[27:12]}};
        trunc_ln708_71_reg_2842 <= {{acc_V_10_0_reg_981[27:12]}};
        trunc_ln708_72_reg_2847 <= {{acc_V_11_0_reg_969[27:12]}};
        trunc_ln708_73_reg_2852 <= {{acc_V_12_0_reg_957[27:12]}};
        trunc_ln708_74_reg_2857 <= {{acc_V_13_0_reg_945[27:12]}};
        trunc_ln708_75_reg_2862 <= {{acc_V_14_0_reg_933[27:12]}};
        trunc_ln708_76_reg_2867 <= {{acc_V_15_0_reg_921[27:12]}};
        trunc_ln708_77_reg_2872 <= {{acc_V_16_0_reg_909[27:12]}};
        trunc_ln708_78_reg_2877 <= {{acc_V_17_0_reg_897[27:12]}};
        trunc_ln708_79_reg_2882 <= {{acc_V_18_0_reg_885[27:12]}};
        trunc_ln708_80_reg_2887 <= {{acc_V_19_0_reg_873[27:12]}};
        trunc_ln708_81_reg_2892 <= {{acc_V_20_0_reg_861[27:12]}};
        trunc_ln708_82_reg_2897 <= {{acc_V_21_0_reg_849[27:12]}};
        trunc_ln708_83_reg_2902 <= {{acc_V_22_0_reg_837[27:12]}};
        trunc_ln708_84_reg_2907 <= {{acc_V_23_0_reg_825[27:12]}};
        trunc_ln708_85_reg_2912 <= {{acc_V_24_0_reg_813[27:12]}};
        trunc_ln708_86_reg_2917 <= {{acc_V_25_0_reg_801[27:12]}};
        trunc_ln708_87_reg_2922 <= {{acc_V_26_0_reg_789[27:12]}};
        trunc_ln708_88_reg_2927 <= {{acc_V_27_0_reg_777[27:12]}};
        trunc_ln708_89_reg_2932 <= {{acc_V_28_0_reg_765[27:12]}};
        trunc_ln708_90_reg_2937 <= {{acc_V_29_0_reg_753[27:12]}};
        trunc_ln708_91_reg_2942 <= {{acc_V_30_0_reg_741[27:12]}};
        trunc_ln708_92_reg_2947 <= {{acc_V_31_0_reg_729[27:12]}};
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_1262_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_1167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1167_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_4_address0 = zext_ln332_fu_1274_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_4_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_address0;
    end else begin
        layer_in_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_4_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_ce0;
    end else begin
        layer_in_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_4_we0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_output_V_we0;
    end else begin
        layer_in_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_address0 = zext_ln340_fu_2064_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address0 = 64'd0;
    end else begin
        layer_out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address1 = 64'd1;
    end else begin
        layer_out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce0 = 1'b1;
    end else begin
        layer_out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce1 = 1'b1;
    end else begin
        layer_out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d0 = trunc_ln708_91_reg_2942;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d0 = trunc_ln708_89_reg_2932;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d0 = trunc_ln708_87_reg_2922;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d0 = trunc_ln708_85_reg_2912;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d0 = trunc_ln708_83_reg_2902;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d0 = trunc_ln708_81_reg_2892;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d0 = trunc_ln708_79_reg_2882;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d0 = trunc_ln708_77_reg_2872;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d0 = trunc_ln708_75_reg_2862;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d0 = trunc_ln708_73_reg_2852;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d0 = trunc_ln708_71_reg_2842;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d0 = trunc_ln708_69_reg_2832;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d0 = trunc_ln708_67_reg_2822;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d0 = trunc_ln708_65_reg_2812;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d0 = trunc_ln708_63_reg_2802;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d0 = {{acc_V_0_0_reg_1101[27:12]}};
    end else begin
        layer_out_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d1 = trunc_ln708_92_reg_2947;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d1 = trunc_ln708_90_reg_2937;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d1 = trunc_ln708_88_reg_2927;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d1 = trunc_ln708_86_reg_2917;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d1 = trunc_ln708_84_reg_2907;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d1 = trunc_ln708_82_reg_2897;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d1 = trunc_ln708_80_reg_2887;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d1 = trunc_ln708_78_reg_2877;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d1 = trunc_ln708_76_reg_2867;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d1 = trunc_ln708_74_reg_2857;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d1 = trunc_ln708_72_reg_2847;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d1 = trunc_ln708_70_reg_2837;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d1 = trunc_ln708_68_reg_2827;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d1 = trunc_ln708_66_reg_2817;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d1 = trunc_ln708_64_reg_2807;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d1 = {{acc_V_1_0_reg_1089[27:12]}};
    end else begin
        layer_out_i_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we0 = 1'b1;
    end else begin
        layer_out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we1 = 1'b1;
    end else begin
        layer_out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_1167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_address0 = zext_ln317_fu_1179_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_data_V_address0;
    end else begin
        tmpdata_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1167_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_data_V_ce0;
    end else begin
        tmpdata_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1167_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_we0 = 1'b1;
    end else begin
        tmpdata_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w5_V_ce0 = 1'b1;
    end else begin
        w5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln313_fu_1155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln315_fu_1167_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((icmp_ln315_fu_1167_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1167_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'd0 == and_ln326_4_fu_1256_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1262_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1262_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & ((1'd0 == and_ln326_4_reg_2619) | (icmp_ln338_fu_2052_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln354_fu_2120_p2 = (pY_1_load_reg_2607 + 32'd1);

assign add_ln356_fu_2131_p2 = (sY_1_load_reg_2597 + 32'd1);

assign add_ln359_fu_2074_p2 = (pX_1_load_reg_2613 + 32'd1);

assign add_ln361_fu_2085_p2 = (sX_1_load_reg_2587 + 32'd1);

assign and_ln326_3_fu_1250_p2 = (icmp_ln326_6_fu_1238_p2 & icmp_ln326_5_fu_1218_p2);

assign and_ln326_4_fu_1256_p2 = (and_ln326_fu_1244_p2 & and_ln326_3_fu_1250_p2);

assign and_ln326_fu_1244_p2 = (icmp_ln326_fu_1188_p2 & icmp_ln326_4_fu_1198_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln315_fu_1167_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_ignore_call0 = ((icmp_ln315_fu_1167_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_470 = (((icmp_ln350_fu_2115_p2 == 1'd0) & (1'd0 == and_ln326_4_reg_2619) & (icmp_ln346_fu_2069_p2 == 1'd1)) | ((icmp_ln350_fu_2115_p2 == 1'd0) & (icmp_ln346_fu_2069_p2 == 1'd1) & (icmp_ln338_fu_2052_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_622 = (((1'd0 == and_ln326_4_reg_2619) & (icmp_ln350_fu_2115_p2 == 1'd1) & (icmp_ln346_fu_2069_p2 == 1'd1)) | ((icmp_ln350_fu_2115_p2 == 1'd1) & (icmp_ln346_fu_2069_p2 == 1'd1) & (icmp_ln338_fu_2052_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_684 = (((icmp_ln346_fu_2069_p2 == 1'd0) & (1'd0 == and_ln326_4_reg_2619)) | ((icmp_ln346_fu_2069_p2 == 1'd0) & (icmp_ln338_fu_2052_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_686 = (((1'd0 == and_ln326_4_reg_2619) & (icmp_ln346_fu_2069_p2 == 1'd1)) | ((icmp_ln346_fu_2069_p2 == 1'd1) & (icmp_ln338_fu_2052_p2 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_start = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config5_s_fu_1146_ap_start_reg;

assign grp_fu_2155_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2163_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2171_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2179_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2187_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2195_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2203_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2211_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2219_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2227_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2235_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2243_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2251_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2259_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2267_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2275_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2283_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2291_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2299_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2307_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2315_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2323_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2331_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2339_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2347_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2355_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2363_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2371_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2379_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2387_p1 = sext_ln1116_fu_1284_p1;

assign grp_fu_2395_p1 = sext_ln1116_fu_1284_p1;

assign i1_fu_1173_p2 = (i1_0_i_reg_718 + 6'd1);

assign i_fu_1161_p2 = (i_0_i_reg_707 + 11'd1);

assign i_ic_fu_2058_p2 = (i_ic_0_i_reg_1124 + 6'd1);

assign icmp_ln313_fu_1155_p2 = ((i_0_i_reg_707 == 11'd1156) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_1167_p2 = ((i1_0_i_reg_718 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_1262_p2 = ((in_index_reg_1113 == 9'd288) ? 1'b1 : 1'b0);

assign icmp_ln326_4_fu_1198_p2 = ((sY_1 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln326_5_fu_1218_p2 = (($signed(tmp_4_fu_1208_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_6_fu_1238_p2 = (($signed(tmp_5_fu_1228_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_1188_p2 = ((sX_1 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_2052_p2 = ((i_ic_0_i_reg_1124 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_2069_p2 = ((pX_1_load_reg_2613 == 32'd33) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_2115_p2 = ((pY_1_load_reg_2607 == 32'd33) ? 1'b1 : 1'b0);

assign ir_fu_1268_p2 = (in_index_reg_1113 + 9'd1);

assign res_V_V_din = layer_out_i_q0;

assign select_ln356_fu_2136_p3 = ((icmp_ln326_4_reg_2602[0:0] === 1'b1) ? 32'd2 : add_ln356_fu_2131_p2);

assign select_ln361_fu_2090_p3 = ((icmp_ln326_reg_2592[0:0] === 1'b1) ? 32'd2 : add_ln361_fu_2085_p2);

assign sext_ln1116_fu_1284_p0 = layer_in_V_4_q0;

assign sext_ln1116_fu_1284_p1 = sext_ln1116_fu_1284_p0;

assign start_out = real_start;

assign tmp_100_fu_1352_p4 = {{w5_V_q0[95:80]}};

assign tmp_101_fu_1366_p4 = {{w5_V_q0[111:96]}};

assign tmp_102_fu_1380_p4 = {{w5_V_q0[127:112]}};

assign tmp_103_fu_1394_p4 = {{w5_V_q0[143:128]}};

assign tmp_104_fu_1408_p4 = {{w5_V_q0[159:144]}};

assign tmp_105_fu_1422_p4 = {{w5_V_q0[175:160]}};

assign tmp_106_fu_1436_p4 = {{w5_V_q0[191:176]}};

assign tmp_107_fu_1450_p4 = {{w5_V_q0[207:192]}};

assign tmp_108_fu_1464_p4 = {{w5_V_q0[223:208]}};

assign tmp_109_fu_1478_p4 = {{w5_V_q0[239:224]}};

assign tmp_110_fu_1492_p4 = {{w5_V_q0[255:240]}};

assign tmp_111_fu_1506_p4 = {{w5_V_q0[271:256]}};

assign tmp_112_fu_1520_p4 = {{w5_V_q0[287:272]}};

assign tmp_113_fu_1534_p4 = {{w5_V_q0[303:288]}};

assign tmp_114_fu_1548_p4 = {{w5_V_q0[319:304]}};

assign tmp_115_fu_1562_p4 = {{w5_V_q0[335:320]}};

assign tmp_116_fu_1576_p4 = {{w5_V_q0[351:336]}};

assign tmp_117_fu_1590_p4 = {{w5_V_q0[367:352]}};

assign tmp_118_fu_1604_p4 = {{w5_V_q0[383:368]}};

assign tmp_119_fu_1618_p4 = {{w5_V_q0[399:384]}};

assign tmp_120_fu_1632_p4 = {{w5_V_q0[415:400]}};

assign tmp_121_fu_1646_p4 = {{w5_V_q0[431:416]}};

assign tmp_122_fu_1660_p4 = {{w5_V_q0[447:432]}};

assign tmp_123_fu_1674_p4 = {{w5_V_q0[463:448]}};

assign tmp_124_fu_1688_p4 = {{w5_V_q0[479:464]}};

assign tmp_125_fu_1702_p4 = {{w5_V_q0[495:480]}};

assign tmp_2_fu_1716_p4 = {{w5_V_q0[508:496]}};

assign tmp_4_fu_1208_p4 = {{pY_1[31:1]}};

assign tmp_5_fu_1228_p4 = {{pX_1[31:1]}};

assign tmp_96_fu_1296_p4 = {{w5_V_q0[31:16]}};

assign tmp_97_fu_1310_p4 = {{w5_V_q0[47:32]}};

assign tmp_98_fu_1324_p4 = {{w5_V_q0[63:48]}};

assign tmp_99_fu_1338_p4 = {{w5_V_q0[79:64]}};

assign trunc_ln332_fu_1280_p1 = w5_V_q0[15:0];

assign w5_V_address0 = zext_ln332_fu_1274_p1;

assign zext_ln317_fu_1179_p1 = i1_0_i_reg_718;

assign zext_ln332_fu_1274_p1 = in_index_reg_1113;

assign zext_ln340_fu_2064_p1 = i_ic_0_i_reg_1124;

endmodule //conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config5_s
