// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_V_dout,
        data_V_V_empty_n,
        data_V_V_read,
        res_V_V_din,
        res_V_V_full_n,
        res_V_V_write
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_pp0_stage0 = 24'd16;
parameter    ap_ST_fsm_state7 = 24'd32;
parameter    ap_ST_fsm_state8 = 24'd64;
parameter    ap_ST_fsm_state9 = 24'd128;
parameter    ap_ST_fsm_state10 = 24'd256;
parameter    ap_ST_fsm_state11 = 24'd512;
parameter    ap_ST_fsm_state12 = 24'd1024;
parameter    ap_ST_fsm_state13 = 24'd2048;
parameter    ap_ST_fsm_state14 = 24'd4096;
parameter    ap_ST_fsm_state15 = 24'd8192;
parameter    ap_ST_fsm_state16 = 24'd16384;
parameter    ap_ST_fsm_state17 = 24'd32768;
parameter    ap_ST_fsm_state18 = 24'd65536;
parameter    ap_ST_fsm_state19 = 24'd131072;
parameter    ap_ST_fsm_state20 = 24'd262144;
parameter    ap_ST_fsm_state21 = 24'd524288;
parameter    ap_ST_fsm_state22 = 24'd1048576;
parameter    ap_ST_fsm_state23 = 24'd2097152;
parameter    ap_ST_fsm_state24 = 24'd4194304;
parameter    ap_ST_fsm_state25 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_V_dout;
input   data_V_V_empty_n;
output   data_V_V_read;
output  [15:0] res_V_V_din;
input   res_V_V_full_n;
output   res_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_V_read;
reg res_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [4:0] layer_in_V_5_address0;
reg    layer_in_V_5_ce0;
reg    layer_in_V_5_we0;
wire  signed [15:0] layer_in_V_5_q0;
reg   [31:0] sX_2;
reg   [31:0] sY_2;
reg   [31:0] pY_2;
reg   [31:0] pX_2;
wire   [4:0] w2_V_address0;
reg    w2_V_ce0;
wire   [508:0] w2_V_q0;
reg    data_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln315_fu_1169_p2;
reg    res_V_V_blk_n;
wire    ap_CS_fsm_state24;
reg   [31:0] acc_V_31_0_reg_731;
reg   [31:0] acc_V_30_0_reg_743;
reg   [31:0] acc_V_29_0_reg_755;
reg   [31:0] acc_V_28_0_reg_767;
reg   [31:0] acc_V_27_0_reg_779;
reg   [31:0] acc_V_26_0_reg_791;
reg   [31:0] acc_V_25_0_reg_803;
reg   [31:0] acc_V_24_0_reg_815;
reg   [31:0] acc_V_23_0_reg_827;
reg   [31:0] acc_V_22_0_reg_839;
reg   [31:0] acc_V_21_0_reg_851;
reg   [31:0] acc_V_20_0_reg_863;
reg   [31:0] acc_V_19_0_reg_875;
reg   [31:0] acc_V_18_0_reg_887;
reg   [31:0] acc_V_17_0_reg_899;
reg   [31:0] acc_V_16_0_reg_911;
reg   [31:0] acc_V_15_0_reg_923;
reg   [31:0] acc_V_14_0_reg_935;
reg   [31:0] acc_V_13_0_reg_947;
reg   [31:0] acc_V_12_0_reg_959;
reg   [31:0] acc_V_11_0_reg_971;
reg   [31:0] acc_V_10_0_reg_983;
reg   [31:0] acc_V_9_0_reg_995;
reg   [31:0] acc_V_8_0_reg_1007;
reg   [31:0] acc_V_7_0_reg_1019;
reg   [31:0] acc_V_6_0_reg_1031;
reg   [31:0] acc_V_5_0_reg_1043;
reg   [31:0] acc_V_4_0_reg_1055;
reg   [31:0] acc_V_3_0_reg_1067;
reg   [31:0] acc_V_2_0_reg_1079;
reg   [31:0] acc_V_1_0_reg_1091;
reg   [31:0] acc_V_0_0_reg_1103;
reg   [4:0] in_index_reg_1115;
reg    ap_block_state1;
wire   [10:0] i_fu_1163_p2;
reg   [10:0] i_reg_2576;
wire    ap_CS_fsm_state2;
wire   [1:0] i1_fu_1175_p2;
reg    ap_block_state3;
reg   [31:0] sX_2_load_reg_2589;
wire    ap_CS_fsm_state4;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_ready;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done;
wire   [0:0] icmp_ln326_fu_1190_p2;
reg   [0:0] icmp_ln326_reg_2594;
reg   [31:0] sY_2_load_reg_2599;
wire   [0:0] icmp_ln326_7_fu_1200_p2;
reg   [0:0] icmp_ln326_7_reg_2604;
reg   [31:0] pY_2_load_reg_2609;
reg   [31:0] pX_2_load_reg_2615;
wire   [0:0] and_ln326_6_fu_1258_p2;
reg   [0:0] and_ln326_6_reg_2621;
wire   [0:0] icmp_ln324_fu_1264_p2;
reg   [0:0] icmp_ln324_reg_2625;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] ir_fu_1270_p2;
reg    ap_enable_reg_pp0_iter0;
wire  signed [31:0] grp_fu_2157_p3;
reg    ap_enable_reg_pp0_iter1;
wire  signed [31:0] grp_fu_2165_p3;
wire  signed [31:0] grp_fu_2173_p3;
wire  signed [31:0] grp_fu_2181_p3;
wire  signed [31:0] grp_fu_2189_p3;
wire  signed [31:0] grp_fu_2197_p3;
wire  signed [31:0] grp_fu_2205_p3;
wire  signed [31:0] grp_fu_2213_p3;
wire  signed [31:0] grp_fu_2221_p3;
wire  signed [31:0] grp_fu_2229_p3;
wire  signed [31:0] grp_fu_2237_p3;
wire  signed [31:0] grp_fu_2245_p3;
wire  signed [31:0] grp_fu_2253_p3;
wire  signed [31:0] grp_fu_2261_p3;
wire  signed [31:0] grp_fu_2269_p3;
wire  signed [31:0] grp_fu_2277_p3;
wire  signed [31:0] grp_fu_2285_p3;
wire  signed [31:0] grp_fu_2293_p3;
wire  signed [31:0] grp_fu_2301_p3;
wire  signed [31:0] grp_fu_2309_p3;
wire  signed [31:0] grp_fu_2317_p3;
wire  signed [31:0] grp_fu_2325_p3;
wire  signed [31:0] grp_fu_2333_p3;
wire  signed [31:0] grp_fu_2341_p3;
wire  signed [31:0] grp_fu_2349_p3;
wire  signed [31:0] grp_fu_2357_p3;
wire  signed [31:0] grp_fu_2365_p3;
wire  signed [31:0] grp_fu_2373_p3;
wire  signed [31:0] grp_fu_2381_p3;
wire  signed [31:0] grp_fu_2389_p3;
wire  signed [31:0] grp_fu_2397_p3;
wire  signed [31:0] grp_fu_2405_p3;
reg   [15:0] trunc_ln708_93_reg_2804;
wire    ap_CS_fsm_state7;
reg   [15:0] trunc_ln708_94_reg_2809;
reg   [15:0] trunc_ln708_95_reg_2814;
reg   [15:0] trunc_ln708_96_reg_2819;
reg   [15:0] trunc_ln708_97_reg_2824;
reg   [15:0] trunc_ln708_98_reg_2829;
reg   [15:0] trunc_ln708_99_reg_2834;
reg   [15:0] trunc_ln708_100_reg_2839;
reg   [15:0] trunc_ln708_101_reg_2844;
reg   [15:0] trunc_ln708_102_reg_2849;
reg   [15:0] trunc_ln708_103_reg_2854;
reg   [15:0] trunc_ln708_104_reg_2859;
reg   [15:0] trunc_ln708_105_reg_2864;
reg   [15:0] trunc_ln708_106_reg_2869;
reg   [15:0] trunc_ln708_107_reg_2874;
reg   [15:0] trunc_ln708_108_reg_2879;
reg   [15:0] trunc_ln708_109_reg_2884;
reg   [15:0] trunc_ln708_110_reg_2889;
reg   [15:0] trunc_ln708_111_reg_2894;
reg   [15:0] trunc_ln708_112_reg_2899;
reg   [15:0] trunc_ln708_113_reg_2904;
reg   [15:0] trunc_ln708_114_reg_2909;
reg   [15:0] trunc_ln708_115_reg_2914;
reg   [15:0] trunc_ln708_116_reg_2919;
reg   [15:0] trunc_ln708_117_reg_2924;
reg   [15:0] trunc_ln708_118_reg_2929;
reg   [15:0] trunc_ln708_119_reg_2934;
reg   [15:0] trunc_ln708_120_reg_2939;
reg   [15:0] trunc_ln708_121_reg_2944;
reg   [15:0] trunc_ln708_122_reg_2949;
wire   [5:0] i_ic_fu_2060_p2;
reg   [5:0] i_ic_reg_2957;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln338_fu_2054_p2;
wire   [0:0] icmp_ln346_fu_2071_p2;
reg   [0:0] icmp_ln346_reg_2967;
wire   [31:0] select_ln356_fu_2138_p3;
wire   [0:0] icmp_ln350_fu_2117_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg   [1:0] tmpdata_V_address0;
reg    tmpdata_V_ce0;
reg    tmpdata_V_we0;
wire   [15:0] tmpdata_V_q0;
reg   [4:0] layer_out_i_address0;
reg    layer_out_i_ce0;
reg    layer_out_i_we0;
reg   [15:0] layer_out_i_d0;
wire   [15:0] layer_out_i_q0;
reg   [4:0] layer_out_i_address1;
reg    layer_out_i_ce1;
reg    layer_out_i_we1;
reg   [15:0] layer_out_i_d1;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_start;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_idle;
wire   [1:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_data_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_data_V_ce0;
wire   [4:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_address0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_ce0;
wire    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_we0;
wire   [15:0] grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_d0;
reg   [10:0] i_0_i_reg_709;
wire    ap_CS_fsm_state25;
reg   [1:0] i1_0_i_reg_720;
wire   [0:0] icmp_ln313_fu_1157_p2;
wire    ap_block_pp0_stage0;
reg   [5:0] i_ic_0_i_reg_1126;
wire    ap_CS_fsm_state22;
reg   [31:0] storemerge_i_reg_1137;
reg    grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_start_reg;
reg    ap_block_state3_ignore_call0;
wire   [63:0] zext_ln317_fu_1181_p1;
wire   [63:0] zext_ln332_fu_1276_p1;
wire   [63:0] zext_ln340_fu_2066_p1;
wire   [31:0] select_ln361_fu_2092_p3;
wire   [31:0] add_ln354_fu_2122_p2;
wire   [31:0] add_ln359_fu_2076_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [30:0] tmp_6_fu_1210_p4;
wire   [30:0] tmp_7_fu_1230_p4;
wire   [0:0] icmp_ln326_8_fu_1220_p2;
wire   [0:0] icmp_ln326_9_fu_1240_p2;
wire   [0:0] and_ln326_5_fu_1252_p2;
wire   [0:0] and_ln326_fu_1246_p2;
wire  signed [15:0] sext_ln1116_fu_1286_p0;
wire  signed [15:0] trunc_ln332_fu_1282_p1;
wire  signed [15:0] tmp_127_fu_1298_p4;
wire  signed [15:0] tmp_128_fu_1312_p4;
wire  signed [15:0] tmp_129_fu_1326_p4;
wire  signed [15:0] tmp_130_fu_1340_p4;
wire  signed [15:0] tmp_131_fu_1354_p4;
wire  signed [15:0] tmp_132_fu_1368_p4;
wire  signed [15:0] tmp_133_fu_1382_p4;
wire  signed [15:0] tmp_134_fu_1396_p4;
wire  signed [15:0] tmp_135_fu_1410_p4;
wire  signed [15:0] tmp_136_fu_1424_p4;
wire  signed [15:0] tmp_137_fu_1438_p4;
wire  signed [15:0] tmp_138_fu_1452_p4;
wire  signed [15:0] tmp_139_fu_1466_p4;
wire  signed [15:0] tmp_140_fu_1480_p4;
wire  signed [15:0] tmp_141_fu_1494_p4;
wire  signed [15:0] tmp_142_fu_1508_p4;
wire  signed [15:0] tmp_143_fu_1522_p4;
wire  signed [15:0] tmp_144_fu_1536_p4;
wire  signed [15:0] tmp_145_fu_1550_p4;
wire  signed [15:0] tmp_146_fu_1564_p4;
wire  signed [15:0] tmp_147_fu_1578_p4;
wire  signed [15:0] tmp_148_fu_1592_p4;
wire  signed [15:0] tmp_149_fu_1606_p4;
wire  signed [15:0] tmp_150_fu_1620_p4;
wire  signed [15:0] tmp_151_fu_1634_p4;
wire  signed [15:0] tmp_152_fu_1648_p4;
wire  signed [15:0] tmp_153_fu_1662_p4;
wire  signed [15:0] tmp_154_fu_1676_p4;
wire  signed [15:0] tmp_155_fu_1690_p4;
wire  signed [15:0] tmp_156_fu_1704_p4;
wire  signed [12:0] tmp_3_fu_1718_p4;
wire   [31:0] add_ln361_fu_2087_p2;
wire   [31:0] add_ln356_fu_2133_p2;
wire  signed [15:0] grp_fu_2157_p1;
wire  signed [31:0] sext_ln1116_fu_1286_p1;
wire  signed [15:0] grp_fu_2165_p1;
wire  signed [15:0] grp_fu_2173_p1;
wire  signed [15:0] grp_fu_2181_p1;
wire  signed [15:0] grp_fu_2189_p1;
wire  signed [15:0] grp_fu_2197_p1;
wire  signed [15:0] grp_fu_2205_p1;
wire  signed [15:0] grp_fu_2213_p1;
wire  signed [15:0] grp_fu_2221_p1;
wire  signed [15:0] grp_fu_2229_p1;
wire  signed [15:0] grp_fu_2237_p1;
wire  signed [15:0] grp_fu_2245_p1;
wire  signed [15:0] grp_fu_2253_p1;
wire  signed [15:0] grp_fu_2261_p1;
wire  signed [15:0] grp_fu_2269_p1;
wire  signed [15:0] grp_fu_2277_p1;
wire  signed [15:0] grp_fu_2285_p1;
wire  signed [15:0] grp_fu_2293_p1;
wire  signed [15:0] grp_fu_2301_p1;
wire  signed [15:0] grp_fu_2309_p1;
wire  signed [15:0] grp_fu_2317_p1;
wire  signed [15:0] grp_fu_2325_p1;
wire  signed [15:0] grp_fu_2333_p1;
wire  signed [15:0] grp_fu_2341_p1;
wire  signed [15:0] grp_fu_2349_p1;
wire  signed [15:0] grp_fu_2357_p1;
wire  signed [15:0] grp_fu_2365_p1;
wire  signed [15:0] grp_fu_2373_p1;
wire  signed [15:0] grp_fu_2381_p1;
wire  signed [15:0] grp_fu_2389_p1;
wire  signed [15:0] grp_fu_2397_p1;
reg   [23:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_684;
reg    ap_condition_686;
reg    ap_condition_470;
reg    ap_condition_622;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 24'd1;
#0 sX_2 = 32'd0;
#0 sY_2 = 32'd0;
#0 pY_2 = 32'd0;
#0 pX_2 = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_start_reg = 1'b0;
end

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_layedEe #(
    .DataWidth( 16 ),
    .AddressRange( 27 ),
    .AddressWidth( 5 ))
layer_in_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_in_V_5_address0),
    .ce0(layer_in_V_5_ce0),
    .we0(layer_in_V_5_we0),
    .d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_d0),
    .q0(layer_in_V_5_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_w2_V #(
    .DataWidth( 509 ),
    .AddressRange( 27 ),
    .AddressWidth( 5 ))
w2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w2_V_address0),
    .ce0(w2_V_ce0),
    .q0(w2_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_tmpdeOg #(
    .DataWidth( 16 ),
    .AddressRange( 3 ),
    .AddressWidth( 2 ))
tmpdata_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmpdata_V_address0),
    .ce0(tmpdata_V_ce0),
    .we0(tmpdata_V_we0),
    .d0(data_V_V_dout),
    .q0(tmpdata_V_q0)
);

conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_layefYi #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
layer_out_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layer_out_i_address0),
    .ce0(layer_out_i_ce0),
    .we0(layer_out_i_we0),
    .d0(layer_out_i_d0),
    .q0(layer_out_i_q0),
    .address1(layer_out_i_address1),
    .ce1(layer_out_i_ce1),
    .we1(layer_out_i_we1),
    .d1(layer_out_i_d1)
);

cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_start),
    .ap_done(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done),
    .ap_idle(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_idle),
    .ap_ready(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_ready),
    .data_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_data_V_address0),
    .data_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_data_V_ce0),
    .data_V_q0(tmpdata_V_q0),
    .output_V_address0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_address0),
    .output_V_ce0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_ce0),
    .output_V_we0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_we0),
    .output_V_d0(grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_d0),
    .output_V_q0(layer_in_V_5_q0)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U8(
    .din0(trunc_ln332_fu_1282_p1),
    .din1(grp_fu_2157_p1),
    .din2(acc_V_0_0_reg_1103),
    .dout(grp_fu_2157_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U9(
    .din0(tmp_127_fu_1298_p4),
    .din1(grp_fu_2165_p1),
    .din2(acc_V_1_0_reg_1091),
    .dout(grp_fu_2165_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U10(
    .din0(tmp_128_fu_1312_p4),
    .din1(grp_fu_2173_p1),
    .din2(acc_V_2_0_reg_1079),
    .dout(grp_fu_2173_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U11(
    .din0(tmp_129_fu_1326_p4),
    .din1(grp_fu_2181_p1),
    .din2(acc_V_3_0_reg_1067),
    .dout(grp_fu_2181_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U12(
    .din0(tmp_130_fu_1340_p4),
    .din1(grp_fu_2189_p1),
    .din2(acc_V_4_0_reg_1055),
    .dout(grp_fu_2189_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U13(
    .din0(tmp_131_fu_1354_p4),
    .din1(grp_fu_2197_p1),
    .din2(acc_V_5_0_reg_1043),
    .dout(grp_fu_2197_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U14(
    .din0(tmp_132_fu_1368_p4),
    .din1(grp_fu_2205_p1),
    .din2(acc_V_6_0_reg_1031),
    .dout(grp_fu_2205_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U15(
    .din0(tmp_133_fu_1382_p4),
    .din1(grp_fu_2213_p1),
    .din2(acc_V_7_0_reg_1019),
    .dout(grp_fu_2213_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U16(
    .din0(tmp_134_fu_1396_p4),
    .din1(grp_fu_2221_p1),
    .din2(acc_V_8_0_reg_1007),
    .dout(grp_fu_2221_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U17(
    .din0(tmp_135_fu_1410_p4),
    .din1(grp_fu_2229_p1),
    .din2(acc_V_9_0_reg_995),
    .dout(grp_fu_2229_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U18(
    .din0(tmp_136_fu_1424_p4),
    .din1(grp_fu_2237_p1),
    .din2(acc_V_10_0_reg_983),
    .dout(grp_fu_2237_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U19(
    .din0(tmp_137_fu_1438_p4),
    .din1(grp_fu_2245_p1),
    .din2(acc_V_11_0_reg_971),
    .dout(grp_fu_2245_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U20(
    .din0(tmp_138_fu_1452_p4),
    .din1(grp_fu_2253_p1),
    .din2(acc_V_12_0_reg_959),
    .dout(grp_fu_2253_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U21(
    .din0(tmp_139_fu_1466_p4),
    .din1(grp_fu_2261_p1),
    .din2(acc_V_13_0_reg_947),
    .dout(grp_fu_2261_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U22(
    .din0(tmp_140_fu_1480_p4),
    .din1(grp_fu_2269_p1),
    .din2(acc_V_14_0_reg_935),
    .dout(grp_fu_2269_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U23(
    .din0(tmp_141_fu_1494_p4),
    .din1(grp_fu_2277_p1),
    .din2(acc_V_15_0_reg_923),
    .dout(grp_fu_2277_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U24(
    .din0(tmp_142_fu_1508_p4),
    .din1(grp_fu_2285_p1),
    .din2(acc_V_16_0_reg_911),
    .dout(grp_fu_2285_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U25(
    .din0(tmp_143_fu_1522_p4),
    .din1(grp_fu_2293_p1),
    .din2(acc_V_17_0_reg_899),
    .dout(grp_fu_2293_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U26(
    .din0(tmp_144_fu_1536_p4),
    .din1(grp_fu_2301_p1),
    .din2(acc_V_18_0_reg_887),
    .dout(grp_fu_2301_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U27(
    .din0(tmp_145_fu_1550_p4),
    .din1(grp_fu_2309_p1),
    .din2(acc_V_19_0_reg_875),
    .dout(grp_fu_2309_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U28(
    .din0(tmp_146_fu_1564_p4),
    .din1(grp_fu_2317_p1),
    .din2(acc_V_20_0_reg_863),
    .dout(grp_fu_2317_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U29(
    .din0(tmp_147_fu_1578_p4),
    .din1(grp_fu_2325_p1),
    .din2(acc_V_21_0_reg_851),
    .dout(grp_fu_2325_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U30(
    .din0(tmp_148_fu_1592_p4),
    .din1(grp_fu_2333_p1),
    .din2(acc_V_22_0_reg_839),
    .dout(grp_fu_2333_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U31(
    .din0(tmp_149_fu_1606_p4),
    .din1(grp_fu_2341_p1),
    .din2(acc_V_23_0_reg_827),
    .dout(grp_fu_2341_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U32(
    .din0(tmp_150_fu_1620_p4),
    .din1(grp_fu_2349_p1),
    .din2(acc_V_24_0_reg_815),
    .dout(grp_fu_2349_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U33(
    .din0(tmp_151_fu_1634_p4),
    .din1(grp_fu_2357_p1),
    .din2(acc_V_25_0_reg_803),
    .dout(grp_fu_2357_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U34(
    .din0(tmp_152_fu_1648_p4),
    .din1(grp_fu_2365_p1),
    .din2(acc_V_26_0_reg_791),
    .dout(grp_fu_2365_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U35(
    .din0(tmp_153_fu_1662_p4),
    .din1(grp_fu_2373_p1),
    .din2(acc_V_27_0_reg_779),
    .dout(grp_fu_2373_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U36(
    .din0(tmp_154_fu_1676_p4),
    .din1(grp_fu_2381_p1),
    .din2(acc_V_28_0_reg_767),
    .dout(grp_fu_2381_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U37(
    .din0(tmp_155_fu_1690_p4),
    .din1(grp_fu_2389_p1),
    .din2(acc_V_29_0_reg_755),
    .dout(grp_fu_2389_p3)
);

myproject_mac_muladd_16s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_16s_16s_32ns_32_1_1_U38(
    .din0(tmp_156_fu_1704_p4),
    .din1(grp_fu_2397_p1),
    .din2(acc_V_30_0_reg_743),
    .dout(grp_fu_2397_p3)
);

myproject_mac_muladd_13s_16s_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_mac_muladd_13s_16s_32ns_32_1_1_U39(
    .din0(tmp_3_fu_1718_p4),
    .din1(layer_in_V_5_q0),
    .din2(acc_V_31_0_reg_731),
    .dout(grp_fu_2405_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln313_fu_1157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state5);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_start_reg <= 1'b0;
    end else begin
        if ((~((icmp_ln315_fu_1169_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1169_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_start_reg <= 1'b1;
        end else if ((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_ready == 1'b1)) begin
            grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_0_0_reg_1103 <= grp_fu_2157_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_0_0_reg_1103 <= 32'd4294434816;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_10_0_reg_983 <= grp_fu_2237_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_10_0_reg_983 <= 32'd200704;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_11_0_reg_971 <= grp_fu_2245_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_11_0_reg_971 <= 32'd4294684672;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_12_0_reg_959 <= grp_fu_2253_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_12_0_reg_959 <= 32'd569344;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_13_0_reg_947 <= grp_fu_2261_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_13_0_reg_947 <= 32'd4289818624;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_14_0_reg_935 <= grp_fu_2269_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_14_0_reg_935 <= 32'd4294815744;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_15_0_reg_923 <= grp_fu_2277_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_15_0_reg_923 <= 32'd479232;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_16_0_reg_911 <= grp_fu_2285_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_16_0_reg_911 <= 32'd290816;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_17_0_reg_899 <= grp_fu_2293_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_17_0_reg_899 <= 32'd446464;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_18_0_reg_887 <= grp_fu_2301_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_18_0_reg_887 <= 32'd94208;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_19_0_reg_875 <= grp_fu_2309_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_19_0_reg_875 <= 32'd4293611520;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_1_0_reg_1091 <= grp_fu_2165_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_1_0_reg_1091 <= 32'd4292497408;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_20_0_reg_863 <= grp_fu_2317_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_20_0_reg_863 <= 32'd245760;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_21_0_reg_851 <= grp_fu_2325_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_21_0_reg_851 <= 32'd4293210112;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_22_0_reg_839 <= grp_fu_2333_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_22_0_reg_839 <= 32'd1499136;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_23_0_reg_827 <= grp_fu_2341_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_23_0_reg_827 <= 32'd946176;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_24_0_reg_815 <= grp_fu_2349_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_24_0_reg_815 <= 32'd4293533696;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_25_0_reg_803 <= grp_fu_2357_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_25_0_reg_803 <= 32'd602112;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_26_0_reg_791 <= grp_fu_2365_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_26_0_reg_791 <= 32'd1294336;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_27_0_reg_779 <= grp_fu_2373_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_27_0_reg_779 <= 32'd4294795264;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_28_0_reg_767 <= grp_fu_2381_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_28_0_reg_767 <= 32'd1056768;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_29_0_reg_755 <= grp_fu_2389_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_29_0_reg_755 <= 32'd2457600;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_2_0_reg_1079 <= grp_fu_2173_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_2_0_reg_1079 <= 32'd4288200704;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_30_0_reg_743 <= grp_fu_2397_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_30_0_reg_743 <= 32'd1523712;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_31_0_reg_731 <= grp_fu_2405_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_31_0_reg_731 <= 32'd577536;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_3_0_reg_1067 <= grp_fu_2181_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_3_0_reg_1067 <= 32'd4294098944;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_4_0_reg_1055 <= grp_fu_2189_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_4_0_reg_1055 <= 32'd45056;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_5_0_reg_1043 <= grp_fu_2197_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_5_0_reg_1043 <= 32'd4294537216;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_6_0_reg_1031 <= grp_fu_2205_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_6_0_reg_1031 <= 32'd589824;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_7_0_reg_1019 <= grp_fu_2213_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_7_0_reg_1019 <= 32'd905216;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_8_0_reg_1007 <= grp_fu_2221_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_8_0_reg_1007 <= 32'd925696;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_reg_2625 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        acc_V_9_0_reg_995 <= grp_fu_2229_p3;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        acc_V_9_0_reg_995 <= 32'd4294795264;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln315_fu_1169_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1169_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_i_reg_720 <= i1_fu_1175_p2;
    end else if (((icmp_ln313_fu_1157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i1_0_i_reg_720 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_0_i_reg_709 <= i_reg_2576;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_709 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        i_ic_0_i_reg_1126 <= i_ic_reg_2957;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_ic_0_i_reg_1126 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln324_fu_1264_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_index_reg_1115 <= ir_fu_1270_p2;
    end else if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        in_index_reg_1115 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_686)) begin
            pX_2 <= 32'd0;
        end else if ((1'b1 == ap_condition_684)) begin
            pX_2 <= add_ln359_fu_2076_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_622)) begin
            pY_2 <= 32'd0;
        end else if ((1'b1 == ap_condition_470)) begin
            pY_2 <= add_ln354_fu_2122_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_686)) begin
            sX_2 <= 32'd0;
        end else if ((1'b1 == ap_condition_684)) begin
            sX_2 <= select_ln361_fu_2092_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        if ((1'b1 == ap_condition_622)) begin
            storemerge_i_reg_1137 <= 32'd0;
        end else if ((1'b1 == ap_condition_470)) begin
            storemerge_i_reg_1137 <= select_ln356_fu_2138_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln326_6_reg_2621 <= and_ln326_6_fu_1258_p2;
        icmp_ln326_7_reg_2604 <= icmp_ln326_7_fu_1200_p2;
        icmp_ln326_reg_2594 <= icmp_ln326_fu_1190_p2;
        pX_2_load_reg_2615 <= pX_2;
        pY_2_load_reg_2609 <= pY_2;
        sX_2_load_reg_2589 <= sX_2;
        sY_2_load_reg_2599 <= sY_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln326_6_reg_2621) & (1'b1 == ap_CS_fsm_state23))) begin
        i_ic_reg_2957 <= i_ic_fu_2060_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2576 <= i_fu_1163_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln324_reg_2625 <= icmp_ln324_fu_1264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & ((1'd0 == and_ln326_6_reg_2621) | (icmp_ln338_fu_2054_p2 == 1'd1)))) begin
        icmp_ln346_reg_2967 <= icmp_ln346_fu_2071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln346_reg_2967 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        sY_2 <= storemerge_i_reg_1137;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        trunc_ln708_100_reg_2839 <= {{acc_V_9_0_reg_995[27:12]}};
        trunc_ln708_101_reg_2844 <= {{acc_V_10_0_reg_983[27:12]}};
        trunc_ln708_102_reg_2849 <= {{acc_V_11_0_reg_971[27:12]}};
        trunc_ln708_103_reg_2854 <= {{acc_V_12_0_reg_959[27:12]}};
        trunc_ln708_104_reg_2859 <= {{acc_V_13_0_reg_947[27:12]}};
        trunc_ln708_105_reg_2864 <= {{acc_V_14_0_reg_935[27:12]}};
        trunc_ln708_106_reg_2869 <= {{acc_V_15_0_reg_923[27:12]}};
        trunc_ln708_107_reg_2874 <= {{acc_V_16_0_reg_911[27:12]}};
        trunc_ln708_108_reg_2879 <= {{acc_V_17_0_reg_899[27:12]}};
        trunc_ln708_109_reg_2884 <= {{acc_V_18_0_reg_887[27:12]}};
        trunc_ln708_110_reg_2889 <= {{acc_V_19_0_reg_875[27:12]}};
        trunc_ln708_111_reg_2894 <= {{acc_V_20_0_reg_863[27:12]}};
        trunc_ln708_112_reg_2899 <= {{acc_V_21_0_reg_851[27:12]}};
        trunc_ln708_113_reg_2904 <= {{acc_V_22_0_reg_839[27:12]}};
        trunc_ln708_114_reg_2909 <= {{acc_V_23_0_reg_827[27:12]}};
        trunc_ln708_115_reg_2914 <= {{acc_V_24_0_reg_815[27:12]}};
        trunc_ln708_116_reg_2919 <= {{acc_V_25_0_reg_803[27:12]}};
        trunc_ln708_117_reg_2924 <= {{acc_V_26_0_reg_791[27:12]}};
        trunc_ln708_118_reg_2929 <= {{acc_V_27_0_reg_779[27:12]}};
        trunc_ln708_119_reg_2934 <= {{acc_V_28_0_reg_767[27:12]}};
        trunc_ln708_120_reg_2939 <= {{acc_V_29_0_reg_755[27:12]}};
        trunc_ln708_121_reg_2944 <= {{acc_V_30_0_reg_743[27:12]}};
        trunc_ln708_122_reg_2949 <= {{acc_V_31_0_reg_731[27:12]}};
        trunc_ln708_93_reg_2804 <= {{acc_V_2_0_reg_1079[27:12]}};
        trunc_ln708_94_reg_2809 <= {{acc_V_3_0_reg_1067[27:12]}};
        trunc_ln708_95_reg_2814 <= {{acc_V_4_0_reg_1055[27:12]}};
        trunc_ln708_96_reg_2819 <= {{acc_V_5_0_reg_1043[27:12]}};
        trunc_ln708_97_reg_2824 <= {{acc_V_6_0_reg_1031[27:12]}};
        trunc_ln708_98_reg_2829 <= {{acc_V_7_0_reg_1019[27:12]}};
        trunc_ln708_99_reg_2834 <= {{acc_V_8_0_reg_1007[27:12]}};
    end
end

always @ (*) begin
    if ((icmp_ln324_fu_1264_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_1169_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_blk_n = data_V_V_empty_n;
    end else begin
        data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1169_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1169_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        data_V_V_read = 1'b1;
    end else begin
        data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_1157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_5_address0 = zext_ln332_fu_1276_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_5_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_address0;
    end else begin
        layer_in_V_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer_in_V_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_5_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_ce0;
    end else begin
        layer_in_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        layer_in_V_5_we0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_output_V_we0;
    end else begin
        layer_in_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        layer_out_i_address0 = zext_ln340_fu_2066_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address0 = 64'd0;
    end else begin
        layer_out_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_address1 = 64'd1;
    end else begin
        layer_out_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce0 = 1'b1;
    end else begin
        layer_out_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_ce1 = 1'b1;
    end else begin
        layer_out_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d0 = trunc_ln708_121_reg_2944;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d0 = trunc_ln708_119_reg_2934;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d0 = trunc_ln708_117_reg_2924;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d0 = trunc_ln708_115_reg_2914;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d0 = trunc_ln708_113_reg_2904;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d0 = trunc_ln708_111_reg_2894;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d0 = trunc_ln708_109_reg_2884;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d0 = trunc_ln708_107_reg_2874;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d0 = trunc_ln708_105_reg_2864;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d0 = trunc_ln708_103_reg_2854;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d0 = trunc_ln708_101_reg_2844;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d0 = trunc_ln708_99_reg_2834;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d0 = trunc_ln708_97_reg_2824;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d0 = trunc_ln708_95_reg_2814;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d0 = trunc_ln708_93_reg_2804;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d0 = {{acc_V_0_0_reg_1103[27:12]}};
    end else begin
        layer_out_i_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        layer_out_i_d1 = trunc_ln708_122_reg_2949;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        layer_out_i_d1 = trunc_ln708_120_reg_2939;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        layer_out_i_d1 = trunc_ln708_118_reg_2929;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_out_i_d1 = trunc_ln708_116_reg_2919;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        layer_out_i_d1 = trunc_ln708_114_reg_2909;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        layer_out_i_d1 = trunc_ln708_112_reg_2899;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        layer_out_i_d1 = trunc_ln708_110_reg_2889;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        layer_out_i_d1 = trunc_ln708_108_reg_2879;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_out_i_d1 = trunc_ln708_106_reg_2869;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        layer_out_i_d1 = trunc_ln708_104_reg_2859;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        layer_out_i_d1 = trunc_ln708_102_reg_2849;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        layer_out_i_d1 = trunc_ln708_100_reg_2839;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        layer_out_i_d1 = trunc_ln708_98_reg_2829;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        layer_out_i_d1 = trunc_ln708_96_reg_2819;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        layer_out_i_d1 = trunc_ln708_94_reg_2809;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        layer_out_i_d1 = {{acc_V_1_0_reg_1091[27:12]}};
    end else begin
        layer_out_i_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we0 = 1'b1;
    end else begin
        layer_out_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state7))) begin
        layer_out_i_we1 = 1'b1;
    end else begin
        layer_out_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        res_V_V_blk_n = res_V_V_full_n;
    end else begin
        res_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        res_V_V_write = 1'b1;
    end else begin
        res_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln315_fu_1169_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_address0 = zext_ln317_fu_1181_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_address0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_data_V_address0;
    end else begin
        tmpdata_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1169_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1169_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmpdata_V_ce0 = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_data_V_ce0;
    end else begin
        tmpdata_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln315_fu_1169_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1169_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmpdata_V_we0 = 1'b1;
    end else begin
        tmpdata_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w2_V_ce0 = 1'b1;
    end else begin
        w2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln313_fu_1157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln315_fu_1169_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1169_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((icmp_ln315_fu_1169_p2 == 1'd0) & (data_V_V_empty_n == 1'b0)) & (icmp_ln315_fu_1169_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'd1 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'd0 == and_ln326_6_fu_1258_p2) & (grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1264_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln324_fu_1264_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & ((1'd0 == and_ln326_6_reg_2621) | (icmp_ln338_fu_2054_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((res_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln354_fu_2122_p2 = (pY_2_load_reg_2609 + 32'd1);

assign add_ln356_fu_2133_p2 = (sY_2_load_reg_2599 + 32'd1);

assign add_ln359_fu_2076_p2 = (pX_2_load_reg_2615 + 32'd1);

assign add_ln361_fu_2087_p2 = (sX_2_load_reg_2589 + 32'd1);

assign and_ln326_5_fu_1252_p2 = (icmp_ln326_9_fu_1240_p2 & icmp_ln326_8_fu_1220_p2);

assign and_ln326_6_fu_1258_p2 = (and_ln326_fu_1246_p2 & and_ln326_5_fu_1252_p2);

assign and_ln326_fu_1246_p2 = (icmp_ln326_fu_1190_p2 & icmp_ln326_7_fu_1200_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln315_fu_1169_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_ignore_call0 = ((icmp_ln315_fu_1169_p2 == 1'd0) & (data_V_V_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_470 = (((icmp_ln350_fu_2117_p2 == 1'd0) & (1'd0 == and_ln326_6_reg_2621) & (icmp_ln346_fu_2071_p2 == 1'd1)) | ((icmp_ln350_fu_2117_p2 == 1'd0) & (icmp_ln346_fu_2071_p2 == 1'd1) & (icmp_ln338_fu_2054_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_622 = (((1'd0 == and_ln326_6_reg_2621) & (icmp_ln350_fu_2117_p2 == 1'd1) & (icmp_ln346_fu_2071_p2 == 1'd1)) | ((icmp_ln350_fu_2117_p2 == 1'd1) & (icmp_ln346_fu_2071_p2 == 1'd1) & (icmp_ln338_fu_2054_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_684 = (((icmp_ln346_fu_2071_p2 == 1'd0) & (1'd0 == and_ln326_6_reg_2621)) | ((icmp_ln346_fu_2071_p2 == 1'd0) & (icmp_ln338_fu_2054_p2 == 1'd1)));
end

always @ (*) begin
    ap_condition_686 = (((1'd0 == and_ln326_6_reg_2621) & (icmp_ln346_fu_2071_p2 == 1'd1)) | ((icmp_ln346_fu_2071_p2 == 1'd1) & (icmp_ln338_fu_2054_p2 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_start = grp_cnnshift_arr_ap_fixed_ap_fixed_16_4_5_3_0_config2_s_fu_1148_ap_start_reg;

assign grp_fu_2157_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2165_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2173_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2181_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2189_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2197_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2205_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2213_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2221_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2229_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2237_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2245_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2253_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2261_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2269_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2277_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2285_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2293_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2301_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2309_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2317_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2325_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2333_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2341_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2349_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2357_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2365_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2373_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2381_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2389_p1 = sext_ln1116_fu_1286_p1;

assign grp_fu_2397_p1 = sext_ln1116_fu_1286_p1;

assign i1_fu_1175_p2 = (i1_0_i_reg_720 + 2'd1);

assign i_fu_1163_p2 = (i_0_i_reg_709 + 11'd1);

assign i_ic_fu_2060_p2 = (i_ic_0_i_reg_1126 + 6'd1);

assign icmp_ln313_fu_1157_p2 = ((i_0_i_reg_709 == 11'd1156) ? 1'b1 : 1'b0);

assign icmp_ln315_fu_1169_p2 = ((i1_0_i_reg_720 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln324_fu_1264_p2 = ((in_index_reg_1115 == 5'd27) ? 1'b1 : 1'b0);

assign icmp_ln326_7_fu_1200_p2 = ((sY_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln326_8_fu_1220_p2 = (($signed(tmp_6_fu_1210_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_9_fu_1240_p2 = (($signed(tmp_7_fu_1230_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln326_fu_1190_p2 = ((sX_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_2054_p2 = ((i_ic_0_i_reg_1126 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_2071_p2 = ((pX_2_load_reg_2615 == 32'd33) ? 1'b1 : 1'b0);

assign icmp_ln350_fu_2117_p2 = ((pY_2_load_reg_2609 == 32'd33) ? 1'b1 : 1'b0);

assign ir_fu_1270_p2 = (in_index_reg_1115 + 5'd1);

assign res_V_V_din = layer_out_i_q0;

assign select_ln356_fu_2138_p3 = ((icmp_ln326_7_reg_2604[0:0] === 1'b1) ? 32'd2 : add_ln356_fu_2133_p2);

assign select_ln361_fu_2092_p3 = ((icmp_ln326_reg_2594[0:0] === 1'b1) ? 32'd2 : add_ln361_fu_2087_p2);

assign sext_ln1116_fu_1286_p0 = layer_in_V_5_q0;

assign sext_ln1116_fu_1286_p1 = sext_ln1116_fu_1286_p0;

assign start_out = real_start;

assign tmp_127_fu_1298_p4 = {{w2_V_q0[31:16]}};

assign tmp_128_fu_1312_p4 = {{w2_V_q0[47:32]}};

assign tmp_129_fu_1326_p4 = {{w2_V_q0[63:48]}};

assign tmp_130_fu_1340_p4 = {{w2_V_q0[79:64]}};

assign tmp_131_fu_1354_p4 = {{w2_V_q0[95:80]}};

assign tmp_132_fu_1368_p4 = {{w2_V_q0[111:96]}};

assign tmp_133_fu_1382_p4 = {{w2_V_q0[127:112]}};

assign tmp_134_fu_1396_p4 = {{w2_V_q0[143:128]}};

assign tmp_135_fu_1410_p4 = {{w2_V_q0[159:144]}};

assign tmp_136_fu_1424_p4 = {{w2_V_q0[175:160]}};

assign tmp_137_fu_1438_p4 = {{w2_V_q0[191:176]}};

assign tmp_138_fu_1452_p4 = {{w2_V_q0[207:192]}};

assign tmp_139_fu_1466_p4 = {{w2_V_q0[223:208]}};

assign tmp_140_fu_1480_p4 = {{w2_V_q0[239:224]}};

assign tmp_141_fu_1494_p4 = {{w2_V_q0[255:240]}};

assign tmp_142_fu_1508_p4 = {{w2_V_q0[271:256]}};

assign tmp_143_fu_1522_p4 = {{w2_V_q0[287:272]}};

assign tmp_144_fu_1536_p4 = {{w2_V_q0[303:288]}};

assign tmp_145_fu_1550_p4 = {{w2_V_q0[319:304]}};

assign tmp_146_fu_1564_p4 = {{w2_V_q0[335:320]}};

assign tmp_147_fu_1578_p4 = {{w2_V_q0[351:336]}};

assign tmp_148_fu_1592_p4 = {{w2_V_q0[367:352]}};

assign tmp_149_fu_1606_p4 = {{w2_V_q0[383:368]}};

assign tmp_150_fu_1620_p4 = {{w2_V_q0[399:384]}};

assign tmp_151_fu_1634_p4 = {{w2_V_q0[415:400]}};

assign tmp_152_fu_1648_p4 = {{w2_V_q0[431:416]}};

assign tmp_153_fu_1662_p4 = {{w2_V_q0[447:432]}};

assign tmp_154_fu_1676_p4 = {{w2_V_q0[463:448]}};

assign tmp_155_fu_1690_p4 = {{w2_V_q0[479:464]}};

assign tmp_156_fu_1704_p4 = {{w2_V_q0[495:480]}};

assign tmp_3_fu_1718_p4 = {{w2_V_q0[508:496]}};

assign tmp_6_fu_1210_p4 = {{pY_2[31:1]}};

assign tmp_7_fu_1230_p4 = {{pX_2[31:1]}};

assign trunc_ln332_fu_1282_p1 = w2_V_q0[15:0];

assign w2_V_address0 = zext_ln332_fu_1276_p1;

assign zext_ln317_fu_1181_p1 = i1_0_i_reg_720;

assign zext_ln332_fu_1276_p1 = in_index_reg_1115;

assign zext_ln340_fu_2066_p1 = i_ic_0_i_reg_1126;

endmodule //conv_2d_cl_ss_ap_fixed_ap_fixed_16_4_5_3_0_config2_s
